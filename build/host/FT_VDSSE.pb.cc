// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FT_VDSSE.proto

#include "FT_VDSSE.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace FT_VDSSE {
class DataRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataRequest>
      _instance;
} _DataRequest_default_instance_;
class DataResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataResponse>
      _instance;
} _DataResponse_default_instance_;
class SearchRequestMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchRequestMessage>
      _instance;
} _SearchRequestMessage_default_instance_;
class SearchReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchReply>
      _instance;
} _SearchReply_default_instance_;
class UpdateRequestMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateRequestMessage>
      _instance;
} _UpdateRequestMessage_default_instance_;
class ExecuteStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecuteStatus>
      _instance;
} _ExecuteStatus_default_instance_;
}  // namespace FT_VDSSE
namespace protobuf_FT_5fVDSSE_2eproto {
void InitDefaultsDataRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::FT_VDSSE::_DataRequest_default_instance_;
    new (ptr) ::FT_VDSSE::DataRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FT_VDSSE::DataRequest::InitAsDefaultInstance();
}

void InitDefaultsDataRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDataRequestImpl);
}

void InitDefaultsDataResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::FT_VDSSE::_DataResponse_default_instance_;
    new (ptr) ::FT_VDSSE::DataResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FT_VDSSE::DataResponse::InitAsDefaultInstance();
}

void InitDefaultsDataResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDataResponseImpl);
}

void InitDefaultsSearchRequestMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::FT_VDSSE::_SearchRequestMessage_default_instance_;
    new (ptr) ::FT_VDSSE::SearchRequestMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FT_VDSSE::SearchRequestMessage::InitAsDefaultInstance();
}

void InitDefaultsSearchRequestMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSearchRequestMessageImpl);
}

void InitDefaultsSearchReplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::FT_VDSSE::_SearchReply_default_instance_;
    new (ptr) ::FT_VDSSE::SearchReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FT_VDSSE::SearchReply::InitAsDefaultInstance();
}

void InitDefaultsSearchReply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSearchReplyImpl);
}

void InitDefaultsUpdateRequestMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::FT_VDSSE::_UpdateRequestMessage_default_instance_;
    new (ptr) ::FT_VDSSE::UpdateRequestMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FT_VDSSE::UpdateRequestMessage::InitAsDefaultInstance();
}

void InitDefaultsUpdateRequestMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdateRequestMessageImpl);
}

void InitDefaultsExecuteStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::FT_VDSSE::_ExecuteStatus_default_instance_;
    new (ptr) ::FT_VDSSE::ExecuteStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::FT_VDSSE::ExecuteStatus::InitAsDefaultInstance();
}

void InitDefaultsExecuteStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsExecuteStatusImpl);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FT_VDSSE::DataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FT_VDSSE::DataRequest, input_content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FT_VDSSE::DataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FT_VDSSE::DataResponse, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FT_VDSSE::SearchRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FT_VDSSE::SearchRequestMessage, sw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FT_VDSSE::SearchRequestMessage, st_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FT_VDSSE::SearchRequestMessage, c1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FT_VDSSE::SearchRequestMessage, first_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FT_VDSSE::SearchReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FT_VDSSE::SearchReply, ind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FT_VDSSE::SearchReply, proof_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FT_VDSSE::UpdateRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FT_VDSSE::UpdateRequestMessage, l_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FT_VDSSE::UpdateRequestMessage, e_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FT_VDSSE::UpdateRequestMessage, proof_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FT_VDSSE::ExecuteStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::FT_VDSSE::ExecuteStatus, status_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::FT_VDSSE::DataRequest)},
  { 6, -1, sizeof(::FT_VDSSE::DataResponse)},
  { 12, -1, sizeof(::FT_VDSSE::SearchRequestMessage)},
  { 21, -1, sizeof(::FT_VDSSE::SearchReply)},
  { 28, -1, sizeof(::FT_VDSSE::UpdateRequestMessage)},
  { 36, -1, sizeof(::FT_VDSSE::ExecuteStatus)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::FT_VDSSE::_DataRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::FT_VDSSE::_DataResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::FT_VDSSE::_SearchRequestMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::FT_VDSSE::_SearchReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::FT_VDSSE::_UpdateRequestMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::FT_VDSSE::_ExecuteStatus_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "FT_VDSSE.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016FT_VDSSE.proto\022\010FT_VDSSE\032\033google/proto"
      "buf/empty.proto\"$\n\013DataRequest\022\025\n\rinput_"
      "content\030\001 \001(\014\"\037\n\014DataResponse\022\017\n\007message"
      "\030\001 \001(\t\"I\n\024SearchRequestMessage\022\n\n\002sw\030\001 \001"
      "(\014\022\n\n\002st\030\002 \001(\014\022\n\n\002c1\030\003 \001(\r\022\r\n\005first\030\004 \001("
      "\010\")\n\013SearchReply\022\013\n\003ind\030\001 \001(\014\022\r\n\005proof\030\002"
      " \001(\014\";\n\024UpdateRequestMessage\022\t\n\001l\030\001 \001(\014\022"
      "\t\n\001e\030\002 \001(\014\022\r\n\005proof\030\003 \001(\014\"\037\n\rExecuteStat"
      "us\022\016\n\006status\030\001 \001(\0102\335\002\n\003RPC\022C\n\006search\022\036.F"
      "T_VDSSE.SearchRequestMessage\032\025.FT_VDSSE."
      "SearchReply\"\0000\001\022C\n\006update\022\036.FT_VDSSE.Upd"
      "ateRequestMessage\032\027.FT_VDSSE.ExecuteStat"
      "us\"\000\022D\n\007update2\022\036.FT_VDSSE.UpdateRequest"
      "Message\032\027.FT_VDSSE.ExecuteStatus\"\000\022K\n\014ba"
      "tch_update\022\036.FT_VDSSE.UpdateRequestMessa"
      "ge\032\027.FT_VDSSE.ExecuteStatus\"\000(\001\0229\n\010SendD"
      "ata\022\025.FT_VDSSE.DataRequest\032\026.FT_VDSSE.Da"
      "taResponseb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 698);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "FT_VDSSE.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_FT_5fVDSSE_2eproto
namespace FT_VDSSE {

// ===================================================================

void DataRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataRequest::kInputContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataRequest::DataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_FT_5fVDSSE_2eproto::InitDefaultsDataRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FT_VDSSE.DataRequest)
}
DataRequest::DataRequest(const DataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  input_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.input_content().size() > 0) {
    input_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_content_);
  }
  // @@protoc_insertion_point(copy_constructor:FT_VDSSE.DataRequest)
}

void DataRequest::SharedCtor() {
  input_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DataRequest::~DataRequest() {
  // @@protoc_insertion_point(destructor:FT_VDSSE.DataRequest)
  SharedDtor();
}

void DataRequest::SharedDtor() {
  input_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DataRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataRequest::descriptor() {
  ::protobuf_FT_5fVDSSE_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FT_5fVDSSE_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataRequest& DataRequest::default_instance() {
  ::protobuf_FT_5fVDSSE_2eproto::InitDefaultsDataRequest();
  return *internal_default_instance();
}

DataRequest* DataRequest::New(::google::protobuf::Arena* arena) const {
  DataRequest* n = new DataRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:FT_VDSSE.DataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DataRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FT_VDSSE.DataRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes input_content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_input_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FT_VDSSE.DataRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FT_VDSSE.DataRequest)
  return false;
#undef DO_
}

void DataRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FT_VDSSE.DataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes input_content = 1;
  if (this->input_content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->input_content(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FT_VDSSE.DataRequest)
}

::google::protobuf::uint8* DataRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FT_VDSSE.DataRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes input_content = 1;
  if (this->input_content().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->input_content(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FT_VDSSE.DataRequest)
  return target;
}

size_t DataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FT_VDSSE.DataRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes input_content = 1;
  if (this->input_content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->input_content());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FT_VDSSE.DataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DataRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FT_VDSSE.DataRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FT_VDSSE.DataRequest)
    MergeFrom(*source);
  }
}

void DataRequest::MergeFrom(const DataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FT_VDSSE.DataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.input_content().size() > 0) {

    input_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_content_);
  }
}

void DataRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FT_VDSSE.DataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataRequest::CopyFrom(const DataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FT_VDSSE.DataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataRequest::IsInitialized() const {
  return true;
}

void DataRequest::Swap(DataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataRequest::InternalSwap(DataRequest* other) {
  using std::swap;
  input_content_.Swap(&other->input_content_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DataRequest::GetMetadata() const {
  protobuf_FT_5fVDSSE_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FT_5fVDSSE_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataResponse::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataResponse::DataResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_FT_5fVDSSE_2eproto::InitDefaultsDataResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FT_VDSSE.DataResponse)
}
DataResponse::DataResponse(const DataResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:FT_VDSSE.DataResponse)
}

void DataResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

DataResponse::~DataResponse() {
  // @@protoc_insertion_point(destructor:FT_VDSSE.DataResponse)
  SharedDtor();
}

void DataResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DataResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataResponse::descriptor() {
  ::protobuf_FT_5fVDSSE_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FT_5fVDSSE_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataResponse& DataResponse::default_instance() {
  ::protobuf_FT_5fVDSSE_2eproto::InitDefaultsDataResponse();
  return *internal_default_instance();
}

DataResponse* DataResponse::New(::google::protobuf::Arena* arena) const {
  DataResponse* n = new DataResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:FT_VDSSE.DataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DataResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FT_VDSSE.DataResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "FT_VDSSE.DataResponse.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FT_VDSSE.DataResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FT_VDSSE.DataResponse)
  return false;
#undef DO_
}

void DataResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FT_VDSSE.DataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FT_VDSSE.DataResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FT_VDSSE.DataResponse)
}

::google::protobuf::uint8* DataResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FT_VDSSE.DataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "FT_VDSSE.DataResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FT_VDSSE.DataResponse)
  return target;
}

size_t DataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FT_VDSSE.DataResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FT_VDSSE.DataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DataResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FT_VDSSE.DataResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FT_VDSSE.DataResponse)
    MergeFrom(*source);
  }
}

void DataResponse::MergeFrom(const DataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FT_VDSSE.DataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void DataResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FT_VDSSE.DataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataResponse::CopyFrom(const DataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FT_VDSSE.DataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataResponse::IsInitialized() const {
  return true;
}

void DataResponse::Swap(DataResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataResponse::InternalSwap(DataResponse* other) {
  using std::swap;
  message_.Swap(&other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DataResponse::GetMetadata() const {
  protobuf_FT_5fVDSSE_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FT_5fVDSSE_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchRequestMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchRequestMessage::kSwFieldNumber;
const int SearchRequestMessage::kStFieldNumber;
const int SearchRequestMessage::kC1FieldNumber;
const int SearchRequestMessage::kFirstFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchRequestMessage::SearchRequestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_FT_5fVDSSE_2eproto::InitDefaultsSearchRequestMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FT_VDSSE.SearchRequestMessage)
}
SearchRequestMessage::SearchRequestMessage(const SearchRequestMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sw().size() > 0) {
    sw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sw_);
  }
  st_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.st().size() > 0) {
    st_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.st_);
  }
  ::memcpy(&c1_, &from.c1_,
    static_cast<size_t>(reinterpret_cast<char*>(&first_) -
    reinterpret_cast<char*>(&c1_)) + sizeof(first_));
  // @@protoc_insertion_point(copy_constructor:FT_VDSSE.SearchRequestMessage)
}

void SearchRequestMessage::SharedCtor() {
  sw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  st_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&c1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&first_) -
      reinterpret_cast<char*>(&c1_)) + sizeof(first_));
  _cached_size_ = 0;
}

SearchRequestMessage::~SearchRequestMessage() {
  // @@protoc_insertion_point(destructor:FT_VDSSE.SearchRequestMessage)
  SharedDtor();
}

void SearchRequestMessage::SharedDtor() {
  sw_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  st_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SearchRequestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchRequestMessage::descriptor() {
  ::protobuf_FT_5fVDSSE_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FT_5fVDSSE_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchRequestMessage& SearchRequestMessage::default_instance() {
  ::protobuf_FT_5fVDSSE_2eproto::InitDefaultsSearchRequestMessage();
  return *internal_default_instance();
}

SearchRequestMessage* SearchRequestMessage::New(::google::protobuf::Arena* arena) const {
  SearchRequestMessage* n = new SearchRequestMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:FT_VDSSE.SearchRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  st_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&c1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&first_) -
      reinterpret_cast<char*>(&c1_)) + sizeof(first_));
  _internal_metadata_.Clear();
}

bool SearchRequestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FT_VDSSE.SearchRequestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes sw = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sw()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes st = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_st()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 c1 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &c1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool first = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &first_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FT_VDSSE.SearchRequestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FT_VDSSE.SearchRequestMessage)
  return false;
#undef DO_
}

void SearchRequestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FT_VDSSE.SearchRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes sw = 1;
  if (this->sw().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sw(), output);
  }

  // bytes st = 2;
  if (this->st().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->st(), output);
  }

  // uint32 c1 = 3;
  if (this->c1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->c1(), output);
  }

  // bool first = 4;
  if (this->first() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->first(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FT_VDSSE.SearchRequestMessage)
}

::google::protobuf::uint8* SearchRequestMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FT_VDSSE.SearchRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes sw = 1;
  if (this->sw().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->sw(), target);
  }

  // bytes st = 2;
  if (this->st().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->st(), target);
  }

  // uint32 c1 = 3;
  if (this->c1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->c1(), target);
  }

  // bool first = 4;
  if (this->first() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->first(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FT_VDSSE.SearchRequestMessage)
  return target;
}

size_t SearchRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FT_VDSSE.SearchRequestMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes sw = 1;
  if (this->sw().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sw());
  }

  // bytes st = 2;
  if (this->st().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->st());
  }

  // uint32 c1 = 3;
  if (this->c1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->c1());
  }

  // bool first = 4;
  if (this->first() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchRequestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FT_VDSSE.SearchRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchRequestMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchRequestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FT_VDSSE.SearchRequestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FT_VDSSE.SearchRequestMessage)
    MergeFrom(*source);
  }
}

void SearchRequestMessage::MergeFrom(const SearchRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FT_VDSSE.SearchRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sw().size() > 0) {

    sw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sw_);
  }
  if (from.st().size() > 0) {

    st_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.st_);
  }
  if (from.c1() != 0) {
    set_c1(from.c1());
  }
  if (from.first() != 0) {
    set_first(from.first());
  }
}

void SearchRequestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FT_VDSSE.SearchRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchRequestMessage::CopyFrom(const SearchRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FT_VDSSE.SearchRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchRequestMessage::IsInitialized() const {
  return true;
}

void SearchRequestMessage::Swap(SearchRequestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchRequestMessage::InternalSwap(SearchRequestMessage* other) {
  using std::swap;
  sw_.Swap(&other->sw_);
  st_.Swap(&other->st_);
  swap(c1_, other->c1_);
  swap(first_, other->first_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchRequestMessage::GetMetadata() const {
  protobuf_FT_5fVDSSE_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FT_5fVDSSE_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchReply::kIndFieldNumber;
const int SearchReply::kProofFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchReply::SearchReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_FT_5fVDSSE_2eproto::InitDefaultsSearchReply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FT_VDSSE.SearchReply)
}
SearchReply::SearchReply(const SearchReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ind_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ind().size() > 0) {
    ind_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ind_);
  }
  proof_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.proof().size() > 0) {
    proof_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proof_);
  }
  // @@protoc_insertion_point(copy_constructor:FT_VDSSE.SearchReply)
}

void SearchReply::SharedCtor() {
  ind_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proof_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SearchReply::~SearchReply() {
  // @@protoc_insertion_point(destructor:FT_VDSSE.SearchReply)
  SharedDtor();
}

void SearchReply::SharedDtor() {
  ind_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proof_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SearchReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchReply::descriptor() {
  ::protobuf_FT_5fVDSSE_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FT_5fVDSSE_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchReply& SearchReply::default_instance() {
  ::protobuf_FT_5fVDSSE_2eproto::InitDefaultsSearchReply();
  return *internal_default_instance();
}

SearchReply* SearchReply::New(::google::protobuf::Arena* arena) const {
  SearchReply* n = new SearchReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchReply::Clear() {
// @@protoc_insertion_point(message_clear_start:FT_VDSSE.SearchReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ind_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proof_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SearchReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FT_VDSSE.SearchReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes ind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ind()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes proof = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_proof()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FT_VDSSE.SearchReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FT_VDSSE.SearchReply)
  return false;
#undef DO_
}

void SearchReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FT_VDSSE.SearchReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes ind = 1;
  if (this->ind().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->ind(), output);
  }

  // bytes proof = 2;
  if (this->proof().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->proof(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FT_VDSSE.SearchReply)
}

::google::protobuf::uint8* SearchReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FT_VDSSE.SearchReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes ind = 1;
  if (this->ind().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->ind(), target);
  }

  // bytes proof = 2;
  if (this->proof().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->proof(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FT_VDSSE.SearchReply)
  return target;
}

size_t SearchReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FT_VDSSE.SearchReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes ind = 1;
  if (this->ind().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ind());
  }

  // bytes proof = 2;
  if (this->proof().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->proof());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FT_VDSSE.SearchReply)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FT_VDSSE.SearchReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FT_VDSSE.SearchReply)
    MergeFrom(*source);
  }
}

void SearchReply::MergeFrom(const SearchReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FT_VDSSE.SearchReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ind().size() > 0) {

    ind_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ind_);
  }
  if (from.proof().size() > 0) {

    proof_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proof_);
  }
}

void SearchReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FT_VDSSE.SearchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchReply::CopyFrom(const SearchReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FT_VDSSE.SearchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchReply::IsInitialized() const {
  return true;
}

void SearchReply::Swap(SearchReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchReply::InternalSwap(SearchReply* other) {
  using std::swap;
  ind_.Swap(&other->ind_);
  proof_.Swap(&other->proof_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchReply::GetMetadata() const {
  protobuf_FT_5fVDSSE_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FT_5fVDSSE_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateRequestMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateRequestMessage::kLFieldNumber;
const int UpdateRequestMessage::kEFieldNumber;
const int UpdateRequestMessage::kProofFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateRequestMessage::UpdateRequestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_FT_5fVDSSE_2eproto::InitDefaultsUpdateRequestMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FT_VDSSE.UpdateRequestMessage)
}
UpdateRequestMessage::UpdateRequestMessage(const UpdateRequestMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  l_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.l().size() > 0) {
    l_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.l_);
  }
  e_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.e().size() > 0) {
    e_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.e_);
  }
  proof_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.proof().size() > 0) {
    proof_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proof_);
  }
  // @@protoc_insertion_point(copy_constructor:FT_VDSSE.UpdateRequestMessage)
}

void UpdateRequestMessage::SharedCtor() {
  l_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  e_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proof_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UpdateRequestMessage::~UpdateRequestMessage() {
  // @@protoc_insertion_point(destructor:FT_VDSSE.UpdateRequestMessage)
  SharedDtor();
}

void UpdateRequestMessage::SharedDtor() {
  l_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  e_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proof_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateRequestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateRequestMessage::descriptor() {
  ::protobuf_FT_5fVDSSE_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FT_5fVDSSE_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateRequestMessage& UpdateRequestMessage::default_instance() {
  ::protobuf_FT_5fVDSSE_2eproto::InitDefaultsUpdateRequestMessage();
  return *internal_default_instance();
}

UpdateRequestMessage* UpdateRequestMessage::New(::google::protobuf::Arena* arena) const {
  UpdateRequestMessage* n = new UpdateRequestMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:FT_VDSSE.UpdateRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  l_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  e_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proof_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool UpdateRequestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FT_VDSSE.UpdateRequestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes l = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_l()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes e = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_e()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes proof = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_proof()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FT_VDSSE.UpdateRequestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FT_VDSSE.UpdateRequestMessage)
  return false;
#undef DO_
}

void UpdateRequestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FT_VDSSE.UpdateRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes l = 1;
  if (this->l().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->l(), output);
  }

  // bytes e = 2;
  if (this->e().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->e(), output);
  }

  // bytes proof = 3;
  if (this->proof().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->proof(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FT_VDSSE.UpdateRequestMessage)
}

::google::protobuf::uint8* UpdateRequestMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FT_VDSSE.UpdateRequestMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes l = 1;
  if (this->l().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->l(), target);
  }

  // bytes e = 2;
  if (this->e().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->e(), target);
  }

  // bytes proof = 3;
  if (this->proof().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->proof(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FT_VDSSE.UpdateRequestMessage)
  return target;
}

size_t UpdateRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FT_VDSSE.UpdateRequestMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes l = 1;
  if (this->l().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->l());
  }

  // bytes e = 2;
  if (this->e().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->e());
  }

  // bytes proof = 3;
  if (this->proof().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->proof());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateRequestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FT_VDSSE.UpdateRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateRequestMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateRequestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FT_VDSSE.UpdateRequestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FT_VDSSE.UpdateRequestMessage)
    MergeFrom(*source);
  }
}

void UpdateRequestMessage::MergeFrom(const UpdateRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FT_VDSSE.UpdateRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.l().size() > 0) {

    l_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.l_);
  }
  if (from.e().size() > 0) {

    e_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.e_);
  }
  if (from.proof().size() > 0) {

    proof_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proof_);
  }
}

void UpdateRequestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FT_VDSSE.UpdateRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateRequestMessage::CopyFrom(const UpdateRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FT_VDSSE.UpdateRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRequestMessage::IsInitialized() const {
  return true;
}

void UpdateRequestMessage::Swap(UpdateRequestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateRequestMessage::InternalSwap(UpdateRequestMessage* other) {
  using std::swap;
  l_.Swap(&other->l_);
  e_.Swap(&other->e_);
  proof_.Swap(&other->proof_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateRequestMessage::GetMetadata() const {
  protobuf_FT_5fVDSSE_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FT_5fVDSSE_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecuteStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecuteStatus::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecuteStatus::ExecuteStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_FT_5fVDSSE_2eproto::InitDefaultsExecuteStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:FT_VDSSE.ExecuteStatus)
}
ExecuteStatus::ExecuteStatus(const ExecuteStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:FT_VDSSE.ExecuteStatus)
}

void ExecuteStatus::SharedCtor() {
  status_ = false;
  _cached_size_ = 0;
}

ExecuteStatus::~ExecuteStatus() {
  // @@protoc_insertion_point(destructor:FT_VDSSE.ExecuteStatus)
  SharedDtor();
}

void ExecuteStatus::SharedDtor() {
}

void ExecuteStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecuteStatus::descriptor() {
  ::protobuf_FT_5fVDSSE_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FT_5fVDSSE_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecuteStatus& ExecuteStatus::default_instance() {
  ::protobuf_FT_5fVDSSE_2eproto::InitDefaultsExecuteStatus();
  return *internal_default_instance();
}

ExecuteStatus* ExecuteStatus::New(::google::protobuf::Arena* arena) const {
  ExecuteStatus* n = new ExecuteStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecuteStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:FT_VDSSE.ExecuteStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear();
}

bool ExecuteStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FT_VDSSE.ExecuteStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FT_VDSSE.ExecuteStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FT_VDSSE.ExecuteStatus)
  return false;
#undef DO_
}

void ExecuteStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FT_VDSSE.ExecuteStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:FT_VDSSE.ExecuteStatus)
}

::google::protobuf::uint8* ExecuteStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:FT_VDSSE.ExecuteStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FT_VDSSE.ExecuteStatus)
  return target;
}

size_t ExecuteStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FT_VDSSE.ExecuteStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool status = 1;
  if (this->status() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecuteStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FT_VDSSE.ExecuteStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecuteStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FT_VDSSE.ExecuteStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FT_VDSSE.ExecuteStatus)
    MergeFrom(*source);
  }
}

void ExecuteStatus::MergeFrom(const ExecuteStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FT_VDSSE.ExecuteStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    set_status(from.status());
  }
}

void ExecuteStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FT_VDSSE.ExecuteStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteStatus::CopyFrom(const ExecuteStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FT_VDSSE.ExecuteStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteStatus::IsInitialized() const {
  return true;
}

void ExecuteStatus::Swap(ExecuteStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecuteStatus::InternalSwap(ExecuteStatus* other) {
  using std::swap;
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecuteStatus::GetMetadata() const {
  protobuf_FT_5fVDSSE_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FT_5fVDSSE_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace FT_VDSSE

// @@protoc_insertion_point(global_scope)
